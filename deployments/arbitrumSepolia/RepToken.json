{
  "address": "0x44F4eDA77C4015e167fd67f78D9A18e75AD7b411",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "initialOwner",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenOwner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burnFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x27ac149449ec78bfc6ebcbea3b6c02c36a8600d4f9a52f7cf36ad2617306e37f",
  "receipt": {
    "to": null,
    "from": "0x059b805AcB11fF78a204dCa147880b76386239aC",
    "contractAddress": "0x44F4eDA77C4015e167fd67f78D9A18e75AD7b411",
    "transactionIndex": 1,
    "gasUsed": "1819555",
    "logsBloom": "0x
    "blockHash": "0x5121bd5fb6d81b531accbf3e47f34d4149b89f5c5aeff9447d19eff853ee9f4b",
    "transactionHash": "0x27ac149449ec78bfc6ebcbea3b6c02c36a8600d4f9a52f7cf36ad2617306e37f",
    "logs": [
      {
        "transactionIndex": 1,
        "blockNumber": 70343052,
        "transactionHash": "0x27ac149449ec78bfc6ebcbea3b6c02c36a8600d4f9a52f7cf36ad2617306e37f",
        "address": "0x44F4eDA77C4015e167fd67f78D9A18e75AD7b411",
        "topics": [
          "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000059b805acb11ff78a204dca147880b76386239ac"
        ],
        "data": "0x0000000000000000000000000000000000000000000000000000000000000000",
        "logIndex": 0,
        "blockHash": "0x5121bd5fb6d81b531accbf3e47f34d4149b89f5c5aeff9447d19eff853ee9f4b"
      },
      {
        "transactionIndex": 1,
        "blockNumber": 70343052,
        "transactionHash": "0x27ac149449ec78bfc6ebcbea3b6c02c36a8600d4f9a52f7cf36ad2617306e37f",
        "address": "0x44F4eDA77C4015e167fd67f78D9A18e75AD7b411",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000059b805acb11ff78a204dca147880b76386239ac"
        ],
        "data": "0x",
        "logIndex": 1,
        "blockHash": "0x5121bd5fb6d81b531accbf3e47f34d4149b89f5c5aeff9447d19eff853ee9f4b"
      }
    ],
    "blockNumber": 70343052,
    "cumulativeGasUsed": "1819555",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x059b805AcB11fF78a204dCa147880b76386239aC"
  ],
  "numDeployments": 1,
  "solcInputHash": "58c30e0a8d34ebd9ed08ff0ccbe9fd04",
  "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Triggers on any successful call to approve(address spender, uint256 amount).\"},\"OwnershipTransferred(address,address)\":{\"details\":\"Emitted when ownership of the contract is transferred from `previousOwner` to `newOwner`.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Triggers when tokens are transferred, including zero value transfers.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner`.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"tokenOwner\":\"The address which owns the funds.\"}},\"approve(address,uint256)\":{\"details\":\"Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.\",\"params\":{\"amount\":\"The amount of tokens to be spent.\",\"spender\":\"The address which will spend the funds.\"}},\"balanceOf(address)\":{\"details\":\"Returns the balance of a specific account.\",\"params\":{\"account\":\"Address of the account to query.\"}},\"burn(uint256)\":{\"details\":\"Burns a specific amount of tokens.\",\"params\":{\"amount\":\"The amount of token to be burned.\"}},\"burnFrom(address,uint256)\":{\"details\":\"Burns a specific amount of tokens from the specified address and decrements allowance.\",\"params\":{\"account\":\"The address to burn tokens from.\",\"amount\":\"The amount of token to be burned.\"}},\"constructor\":{\"details\":\"Constructor that initializes the contract.\",\"params\":{\"initialOwner\":\"Address of the initial owner.\"}},\"mint(address,uint256)\":{\"details\":\"Function to mint tokens.\",\"params\":{\"account\":\"The address that will receive the minted tokens.\",\"amount\":\"The amount of tokens to mint.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"totalSupply()\":{\"details\":\"Returns the total supply of tokens.\"},\"transfer(address,uint256)\":{\"details\":\"Transfers tokens to a specified address.\",\"params\":{\"amount\":\"The amount to be transferred.\",\"recipient\":\"The address to transfer to.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers tokens from one address to another.\",\"params\":{\"amount\":\"The amount of tokens to be transferred.\",\"recipient\":\"The address which you want to transfer to.\",\"sender\":\"The address which you want to send tokens from.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`).\",\"params\":{\"newOwner\":\"The address of the new owner.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"decimals()\":{\"notice\":\"Number of decimals.\"},\"name()\":{\"notice\":\"Token name.\"},\"symbol()\":{\"notice\":\"Token symbol.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/repToken.sol\":\"RepToken\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.20;\\n\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the total token supply.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the account balance of another account with address `account`.\\n     * @param account The address from which the balance will be retrieved.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Transfers `amount` of tokens to address `recipient`, and MUST fire the Transfer event. The\\n     * function SHOULD throw if the `sender` account balance does not have enough tokens to spend.\\n     * @param recipient The address of the recipient.\\n     * @param amount The amount of token to be transferred.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the amount which `spender` is still allowed to withdraw from `owner`.\\n     * @param owner The address of the account owning tokens.\\n     * @param spender The address of the account able to transfer the tokens.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Allows `spender` to withdraw from your account multiple times, up to\\n     * the `amount` amount. If this function is called again it overwrites the current\\n     * allowance with `amount`.\\n     * @param spender The address of the account able to transfer the tokens.\\n     * @param amount The amount of tokens to be approved for transfer.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Transfers `amount` of tokens from address `sender` to address `recipient`, and MUST fire the\\n     * Transfer event.\\n     * @param sender The address of the sender.\\n     * @param recipient The address of the recipient.\\n     * @param amount The amount of token to be transferred.\\n     */\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Triggers when tokens are transferred, including zero value transfers.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Triggers on any successful call to approve(address spender, uint256 amount).\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0xc56b0b2f299f62248271031bc7308529b67b9b0ce942cb84e10a8c6861a5a94a\",\"license\":\"MIT\"},\"contracts/interfaces/IERC20Burnable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.20;\\n\\ninterface IERC20Burnable {\\n    /**\\n     * @dev Burns `amount` of tokens from the caller's account.\\n     * @param amount The amount of tokens to be burned.\\n     */\\n    function burn(uint256 amount) external;\\n\\n    /**\\n     * @dev Burns `amount` of tokens from `account`, deducting from the caller's allowance.\\n     * @param account The address from which the tokens will be burned.\\n     * @param amount The amount of tokens to be burned.\\n     */\\n    function burnFrom(address account, uint256 amount) external;\\n}\\n\",\"keccak256\":\"0x5230fec8b40882492679a253858038b32090e33d6d794acdeb1138bdf2e99e9a\",\"license\":\"MIT\"},\"contracts/interfaces/IOwnable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.20;\\n\\ninterface IOwnable {\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() external view returns (address);\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * @param newOwner The address of the new owner.\\n     */\\n    function transferOwnership(address newOwner) external;\\n\\n    /**\\n     * @dev Emitted when ownership of the contract is transferred from `previousOwner` to `newOwner`.\\n     */\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n}\\n\",\"keccak256\":\"0x43aad94ae4d1567894f50e99c398d24912f010409b6bf5dfbaac4807eba3dc81\",\"license\":\"MIT\"},\"contracts/repToken.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.20;\\n\\nimport \\\"./interfaces/IERC20.sol\\\";\\nimport \\\"./interfaces/IERC20Burnable.sol\\\";\\nimport \\\"./interfaces/IOwnable.sol\\\";\\n\\ncontract RepToken is IERC20, IERC20Burnable, IOwnable {\\n\\n    /**\\n     * Token name.\\n     */\\n    string public name = \\\"RepToken\\\";\\n\\n    /**\\n     * Token symbol.\\n     */\\n    string public symbol = \\\"REP\\\";\\n\\n    /**\\n     * Number of decimals.\\n     */\\n    uint8 public decimals = 18;\\n\\n    /**\\n     * Total supply of the token.\\n     */\\n    uint256 private _totalSupply;\\n\\n    /**\\n     * Balances of accounts.\\n     */\\n    mapping(address => uint256) private _balances;\\n\\n    /**\\n     * Allowances for accounts.\\n     */\\n    mapping(address => mapping(address => uint256)) private _allowances;\\n\\n    /**\\n     * Contract owner.\\n     */\\n    address private _contractOwner;\\n\\n    /**\\n     * @dev Modifier to check if the caller is the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(msg.sender == _contractOwner, \\\"Not the contract owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Constructor that initializes the contract.\\n     * @param initialOwner Address of the initial owner.\\n     */\\n    constructor(address initialOwner) {\\n        _contractOwner = initialOwner;\\n        _mint(initialOwner, 0);  // Initial supply is 0\\n        emit OwnershipTransferred(address(0), initialOwner);\\n    }\\n\\n    // IERC20 implementation\\n\\n    /**\\n     * @dev Returns the total supply of tokens.\\n     */\\n    function totalSupply() external view override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev Returns the balance of a specific account.\\n     * @param account Address of the account to query.\\n     */\\n    function balanceOf(address account) external view override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev Transfers tokens to a specified address.\\n     * @param recipient The address to transfer to.\\n     * @param amount The amount to be transferred.\\n     */\\n    function transfer(address recipient, uint256 amount) external override returns (bool) {\\n        _transfer(msg.sender, recipient, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner`.\\n     * @param tokenOwner The address which owns the funds.\\n     * @param spender The address which will spend the funds.\\n     */\\n    function allowance(address tokenOwner, address spender) external view override returns (uint256) {\\n        return _allowances[tokenOwner][spender];\\n    }\\n\\n    /**\\n     * @dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.\\n     * @param spender The address which will spend the funds.\\n     * @param amount The amount of tokens to be spent.\\n     */\\n    function approve(address spender, uint256 amount) external override returns (bool) {\\n        _approve(msg.sender, spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Transfers tokens from one address to another.\\n     * @param sender The address which you want to send tokens from.\\n     * @param recipient The address which you want to transfer to.\\n     * @param amount The amount of tokens to be transferred.\\n     */\\n    function transferFrom(address sender, address recipient, uint256 amount) external override returns (bool) {\\n        _transfer(sender, recipient, amount);\\n        _approve(sender, msg.sender, _allowances[sender][msg.sender] - amount);\\n        return true;\\n    }\\n\\n    // IERC20Burnable implementation\\n\\n    /**\\n     * @dev Burns a specific amount of tokens.\\n     * @param amount The amount of token to be burned.\\n     */\\n    function burn(uint256 amount) external override {\\n        _burn(msg.sender, amount);\\n    }\\n\\n    /**\\n     * @dev Burns a specific amount of tokens from the specified address and decrements allowance.\\n     * @param account The address to burn tokens from.\\n     * @param amount The amount of token to be burned.\\n     */\\n    function burnFrom(address account, uint256 amount) external override {\\n        uint256 decreasedAllowance = _allowances[account][msg.sender] - amount;\\n        _approve(account, msg.sender, decreasedAllowance);\\n        _burn(account, amount);\\n    }\\n\\n    // IOwnable implementation\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() external view override returns (address) {\\n        return _contractOwner;\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * @param newOwner The address of the new owner.\\n     */\\n    function transferOwnership(address newOwner) external override onlyOwner {\\n        require(newOwner != address(0), \\\"New owner is the zero address\\\");\\n        emit OwnershipTransferred(_contractOwner, newOwner);\\n        _contractOwner = newOwner;\\n    }\\n\\n    // Public mint function\\n\\n    /**\\n     * @dev Function to mint tokens.\\n     * @param account The address that will receive the minted tokens.\\n     * @param amount The amount of tokens to mint.\\n     */\\n    function mint(address account, uint256 amount) external onlyOwner {\\n        _mint(account, amount);\\n    }\\n\\n    // Internal functions\\n\\n    /**\\n     * @dev Moves tokens `amount` from `sender` to `recipient`.\\n     * @param sender The address to send tokens from.\\n     * @param recipient The address to transfer to.\\n     * @param amount The amount of tokens to be transferred.\\n     */\\n    function _transfer(address sender, address recipient, uint256 amount) internal {\\n        require(sender != address(0), \\\"Transfer from the zero address\\\");\\n        require(recipient != address(0), \\\"Transfer to the zero address\\\");\\n\\n        _balances[sender] -= amount;\\n        _balances[recipient] += amount;\\n        emit Transfer(sender, recipient, amount);\\n    }\\n\\n    /**\\n     * @dev Creates `amount` tokens and assigns them to `account`, increasing the total supply.\\n     * @param account The address that will receive the minted tokens.\\n     * @param amount The amount of tokens to mint.\\n     */\\n    function _mint(address account, uint256 amount) internal {\\n        require(account != address(0), \\\"Mint to the zero address\\\");\\n\\n        _totalSupply += amount;\\n        _balances[account] += amount;\\n        emit Transfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the total supply.\\n     * @param account The address that will have the tokens burned.\\n     * @param amount The amount of tokens to be burned.\\n     */\\n    function _burn(address account, uint256 amount) internal {\\n        require(account != address(0), \\\"Burn from the zero address\\\");\\n\\n        _balances[account] -= amount;\\n        _totalSupply -= amount;\\n        emit Transfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `tokenOwner`'s tokens.\\n     * @param tokenOwner The owner of the tokens.\\n     * @param spender The spender who will be allowed to spend the tokens.\\n     * @param amount The amount of tokens to approve.\\n     */\\n    function _approve(address tokenOwner, address spender, uint256 amount) internal {\\n        require(tokenOwner != address(0), \\\"Approve from the zero address\\\");\\n        require(spender != address(0), \\\"Approve to the zero address\\\");\\n\\n        _allowances[tokenOwner][spender] = amount;\\n        emit Approval(tokenOwner, spender, amount);\\n    }\\n}\\n\",\"keccak256\":\"0x3b29fb1666888e3e1f2601091d3af09373d180215d41d3e57031b8b035db18c0\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040526040518060400160405280600881526020017f526570546f6b656e000000000000000000000000000000000000000000000000815250600090816200004a919062000562565b506040518060400160405280600381526020017f52455000000000000000000000000000000000000000000000000000000000008152506001908162000091919062000562565b506012600260006101000a81548160ff021916908360ff160217905550348015620000bb57600080fd5b5060405162001f2338038062001f238339818101604052810190620000e19190620006b3565b80600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620001358160006200019760201b60201c565b8073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35062000800565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160362000209576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620002009062000746565b60405180910390fd5b80600360008282546200021d919062000797565b9250508190555080600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825462000275919062000797565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051620002dc9190620007e3565b60405180910390a35050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200036a57607f821691505b60208210810362000380576200037f62000322565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620003ea7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620003ab565b620003f68683620003ab565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620004436200043d62000437846200040e565b62000418565b6200040e565b9050919050565b6000819050919050565b6200045f8362000422565b620004776200046e826200044a565b848454620003b8565b825550505050565b600090565b6200048e6200047f565b6200049b81848462000454565b505050565b5b81811015620004c357620004b760008262000484565b600181019050620004a1565b5050565b601f8211156200051257620004dc8162000386565b620004e7846200039b565b81016020851015620004f7578190505b6200050f62000506856200039b565b830182620004a0565b50505b505050565b600082821c905092915050565b6000620005376000198460080262000517565b1980831691505092915050565b600062000552838362000524565b9150826002028217905092915050565b6200056d82620002e8565b67ffffffffffffffff811115620005895762000588620002f3565b5b62000595825462000351565b620005a2828285620004c7565b600060209050601f831160018114620005da5760008415620005c5578287015190505b620005d1858262000544565b86555062000641565b601f198416620005ea8662000386565b60005b828110156200061457848901518255600182019150602085019450602081019050620005ed565b8683101562000634578489015162000630601f89168262000524565b8355505b6001600288020188555050505b505050505050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200067b826200064e565b9050919050565b6200068d816200066e565b81146200069957600080fd5b50565b600081519050620006ad8162000682565b92915050565b600060208284031215620006cc57620006cb62000649565b5b6000620006dc848285016200069c565b91505092915050565b600082825260208201905092915050565b7f4d696e7420746f20746865207a65726f20616464726573730000000000000000600082015250565b60006200072e601883620006e5565b91506200073b82620006f6565b602082019050919050565b6000602082019050818103600083015262000761816200071f565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000620007a4826200040e565b9150620007b1836200040e565b9250828201905080821115620007cc57620007cb62000768565b5b92915050565b620007dd816200040e565b82525050565b6000602082019050620007fa6000830184620007d2565b92915050565b61171380620008106000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c806370a082311161008c57806395d89b411161006657806395d89b411461024b578063a9059cbb14610269578063dd62ed3e14610299578063f2fde38b146102c9576100ea565b806370a08231146101e157806379cc6790146102115780638da5cb5b1461022d576100ea565b806323b872dd116100c857806323b872dd1461015b578063313ce5671461018b57806340c10f19146101a957806342966c68146101c5576100ea565b806306fdde03146100ef578063095ea7b31461010d57806318160ddd1461013d575b600080fd5b6100f76102e5565b6040516101049190610fdd565b60405180910390f35b61012760048036038101906101229190611098565b610373565b60405161013491906110f3565b60405180910390f35b61014561038a565b604051610152919061111d565b60405180910390f35b61017560048036038101906101709190611138565b610394565b60405161018291906110f3565b60405180910390f35b61019361043e565b6040516101a091906111a7565b60405180910390f35b6101c360048036038101906101be9190611098565b610451565b005b6101df60048036038101906101da91906111c2565b6104ef565b005b6101fb60048036038101906101f691906111ef565b6104fc565b604051610208919061111d565b60405180910390f35b61022b60048036038101906102269190611098565b610545565b005b6102356105eb565b604051610242919061122b565b60405180910390f35b610253610615565b6040516102609190610fdd565b60405180910390f35b610283600480360381019061027e9190611098565b6106a3565b60405161029091906110f3565b60405180910390f35b6102b360048036038101906102ae9190611246565b6106ba565b6040516102c0919061111d565b60405180910390f35b6102e360048036038101906102de91906111ef565b610741565b005b600080546102f2906112b5565b80601f016020809104026020016040519081016040528092919081815260200182805461031e906112b5565b801561036b5780601f106103405761010080835404028352916020019161036b565b820191906000526020600020905b81548152906001019060200180831161034e57829003601f168201915b505050505081565b6000610380338484610900565b6001905092915050565b6000600354905090565b60006103a1848484610ac9565b610433843384600560008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461042e9190611315565b610900565b600190509392505050565b600260009054906101000a900460ff1681565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146104e1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d890611395565b60405180910390fd5b6104eb8282610cbd565b5050565b6104f93382610e05565b50565b6000600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600081600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546105cf9190611315565b90506105dc833383610900565b6105e68383610e05565b505050565b6000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60018054610622906112b5565b80601f016020809104026020016040519081016040528092919081815260200182805461064e906112b5565b801561069b5780601f106106705761010080835404028352916020019161069b565b820191906000526020600020905b81548152906001019060200180831161067e57829003601f168201915b505050505081565b60006106b0338484610ac9565b6001905092915050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146107d1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107c890611395565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610840576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161083790611401565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361096f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109669061146d565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036109de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109d5906114d9565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583604051610abc919061111d565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610b38576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b2f90611545565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610ba7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b9e906115b1565b60405180910390fd5b80600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610bf69190611315565b9250508190555080600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610c4c91906115d1565b925050819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610cb0919061111d565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610d2c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d2390611651565b60405180910390fd5b8060036000828254610d3e91906115d1565b9250508190555080600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610d9491906115d1565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610df9919061111d565b60405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610e74576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e6b906116bd565b60405180910390fd5b80600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610ec39190611315565b925050819055508060036000828254610edc9190611315565b92505081905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610f41919061111d565b60405180910390a35050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610f87578082015181840152602081019050610f6c565b60008484015250505050565b6000601f19601f8301169050919050565b6000610faf82610f4d565b610fb98185610f58565b9350610fc9818560208601610f69565b610fd281610f93565b840191505092915050565b60006020820190508181036000830152610ff78184610fa4565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061102f82611004565b9050919050565b61103f81611024565b811461104a57600080fd5b50565b60008135905061105c81611036565b92915050565b6000819050919050565b61107581611062565b811461108057600080fd5b50565b6000813590506110928161106c565b92915050565b600080604083850312156110af576110ae610fff565b5b60006110bd8582860161104d565b92505060206110ce85828601611083565b9150509250929050565b60008115159050919050565b6110ed816110d8565b82525050565b600060208201905061110860008301846110e4565b92915050565b61111781611062565b82525050565b6000602082019050611132600083018461110e565b92915050565b60008060006060848603121561115157611150610fff565b5b600061115f8682870161104d565b93505060206111708682870161104d565b925050604061118186828701611083565b9150509250925092565b600060ff82169050919050565b6111a18161118b565b82525050565b60006020820190506111bc6000830184611198565b92915050565b6000602082840312156111d8576111d7610fff565b5b60006111e684828501611083565b91505092915050565b60006020828403121561120557611204610fff565b5b60006112138482850161104d565b91505092915050565b61122581611024565b82525050565b6000602082019050611240600083018461121c565b92915050565b6000806040838503121561125d5761125c610fff565b5b600061126b8582860161104d565b925050602061127c8582860161104d565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806112cd57607f821691505b6020821081036112e0576112df611286565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061132082611062565b915061132b83611062565b9250828203905081811115611343576113426112e6565b5b92915050565b7f4e6f742074686520636f6e7472616374206f776e657200000000000000000000600082015250565b600061137f601683610f58565b915061138a82611349565b602082019050919050565b600060208201905081810360008301526113ae81611372565b9050919050565b7f4e6577206f776e657220697320746865207a65726f2061646472657373000000600082015250565b60006113eb601d83610f58565b91506113f6826113b5565b602082019050919050565b6000602082019050818103600083015261141a816113de565b9050919050565b7f417070726f76652066726f6d20746865207a65726f2061646472657373000000600082015250565b6000611457601d83610f58565b915061146282611421565b602082019050919050565b600060208201905081810360008301526114868161144a565b9050919050565b7f417070726f766520746f20746865207a65726f20616464726573730000000000600082015250565b60006114c3601b83610f58565b91506114ce8261148d565b602082019050919050565b600060208201905081810360008301526114f2816114b6565b9050919050565b7f5472616e736665722066726f6d20746865207a65726f20616464726573730000600082015250565b600061152f601e83610f58565b915061153a826114f9565b602082019050919050565b6000602082019050818103600083015261155e81611522565b9050919050565b7f5472616e7366657220746f20746865207a65726f206164647265737300000000600082015250565b600061159b601c83610f58565b91506115a682611565565b602082019050919050565b600060208201905081810360008301526115ca8161158e565b9050919050565b60006115dc82611062565b91506115e783611062565b92508282019050808211156115ff576115fe6112e6565b5b92915050565b7f4d696e7420746f20746865207a65726f20616464726573730000000000000000600082015250565b600061163b601883610f58565b915061164682611605565b602082019050919050565b6000602082019050818103600083015261166a8161162e565b9050919050565b7f4275726e2066726f6d20746865207a65726f2061646472657373000000000000600082015250565b60006116a7601a83610f58565b91506116b282611671565b602082019050919050565b600060208201905081810360008301526116d68161169a565b905091905056fea2646970667358221220781170149f8b6b178f92e3640d6af0bf9c22cc1bb8b8a915cd43fc5c402aaaf664736f6c63430008180033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100ea5760003560e01c806370a082311161008c57806395d89b411161006657806395d89b411461024b578063a9059cbb14610269578063dd62ed3e14610299578063f2fde38b146102c9576100ea565b806370a08231146101e157806379cc6790146102115780638da5cb5b1461022d576100ea565b806323b872dd116100c857806323b872dd1461015b578063313ce5671461018b57806340c10f19146101a957806342966c68146101c5576100ea565b806306fdde03146100ef578063095ea7b31461010d57806318160ddd1461013d575b600080fd5b6100f76102e5565b6040516101049190610fdd565b60405180910390f35b61012760048036038101906101229190611098565b610373565b60405161013491906110f3565b60405180910390f35b61014561038a565b604051610152919061111d565b60405180910390f35b61017560048036038101906101709190611138565b610394565b60405161018291906110f3565b60405180910390f35b61019361043e565b6040516101a091906111a7565b60405180910390f35b6101c360048036038101906101be9190611098565b610451565b005b6101df60048036038101906101da91906111c2565b6104ef565b005b6101fb60048036038101906101f691906111ef565b6104fc565b604051610208919061111d565b60405180910390f35b61022b60048036038101906102269190611098565b610545565b005b6102356105eb565b604051610242919061122b565b60405180910390f35b610253610615565b6040516102609190610fdd565b60405180910390f35b610283600480360381019061027e9190611098565b6106a3565b60405161029091906110f3565b60405180910390f35b6102b360048036038101906102ae9190611246565b6106ba565b6040516102c0919061111d565b60405180910390f35b6102e360048036038101906102de91906111ef565b610741565b005b600080546102f2906112b5565b80601f016020809104026020016040519081016040528092919081815260200182805461031e906112b5565b801561036b5780601f106103405761010080835404028352916020019161036b565b820191906000526020600020905b81548152906001019060200180831161034e57829003601f168201915b505050505081565b6000610380338484610900565b6001905092915050565b6000600354905090565b60006103a1848484610ac9565b610433843384600560008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461042e9190611315565b610900565b600190509392505050565b600260009054906101000a900460ff1681565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146104e1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d890611395565b60405180910390fd5b6104eb8282610cbd565b5050565b6104f93382610e05565b50565b6000600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600081600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546105cf9190611315565b90506105dc833383610900565b6105e68383610e05565b505050565b6000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60018054610622906112b5565b80601f016020809104026020016040519081016040528092919081815260200182805461064e906112b5565b801561069b5780601f106106705761010080835404028352916020019161069b565b820191906000526020600020905b81548152906001019060200180831161067e57829003601f168201915b505050505081565b60006106b0338484610ac9565b6001905092915050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146107d1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107c890611395565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610840576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161083790611401565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361096f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109669061146d565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036109de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109d5906114d9565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583604051610abc919061111d565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610b38576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b2f90611545565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610ba7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b9e906115b1565b60405180910390fd5b80600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610bf69190611315565b9250508190555080600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610c4c91906115d1565b925050819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610cb0919061111d565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610d2c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d2390611651565b60405180910390fd5b8060036000828254610d3e91906115d1565b9250508190555080600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610d9491906115d1565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610df9919061111d565b60405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610e74576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e6b906116bd565b60405180910390fd5b80600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610ec39190611315565b925050819055508060036000828254610edc9190611315565b92505081905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610f41919061111d565b60405180910390a35050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610f87578082015181840152602081019050610f6c565b60008484015250505050565b6000601f19601f8301169050919050565b6000610faf82610f4d565b610fb98185610f58565b9350610fc9818560208601610f69565b610fd281610f93565b840191505092915050565b60006020820190508181036000830152610ff78184610fa4565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061102f82611004565b9050919050565b61103f81611024565b811461104a57600080fd5b50565b60008135905061105c81611036565b92915050565b6000819050919050565b61107581611062565b811461108057600080fd5b50565b6000813590506110928161106c565b92915050565b600080604083850312156110af576110ae610fff565b5b60006110bd8582860161104d565b92505060206110ce85828601611083565b9150509250929050565b60008115159050919050565b6110ed816110d8565b82525050565b600060208201905061110860008301846110e4565b92915050565b61111781611062565b82525050565b6000602082019050611132600083018461110e565b92915050565b60008060006060848603121561115157611150610fff565b5b600061115f8682870161104d565b93505060206111708682870161104d565b925050604061118186828701611083565b9150509250925092565b600060ff82169050919050565b6111a18161118b565b82525050565b60006020820190506111bc6000830184611198565b92915050565b6000602082840312156111d8576111d7610fff565b5b60006111e684828501611083565b91505092915050565b60006020828403121561120557611204610fff565b5b60006112138482850161104d565b91505092915050565b61122581611024565b82525050565b6000602082019050611240600083018461121c565b92915050565b6000806040838503121561125d5761125c610fff565b5b600061126b8582860161104d565b925050602061127c8582860161104d565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806112cd57607f821691505b6020821081036112e0576112df611286565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061132082611062565b915061132b83611062565b9250828203905081811115611343576113426112e6565b5b92915050565b7f4e6f742074686520636f6e7472616374206f776e657200000000000000000000600082015250565b600061137f601683610f58565b915061138a82611349565b602082019050919050565b600060208201905081810360008301526113ae81611372565b9050919050565b7f4e6577206f776e657220697320746865207a65726f2061646472657373000000600082015250565b60006113eb601d83610f58565b91506113f6826113b5565b602082019050919050565b6000602082019050818103600083015261141a816113de565b9050919050565b7f417070726f76652066726f6d20746865207a65726f2061646472657373000000600082015250565b6000611457601d83610f58565b915061146282611421565b602082019050919050565b600060208201905081810360008301526114868161144a565b9050919050565b7f417070726f766520746f20746865207a65726f20616464726573730000000000600082015250565b60006114c3601b83610f58565b91506114ce8261148d565b602082019050919050565b600060208201905081810360008301526114f2816114b6565b9050919050565b7f5472616e736665722066726f6d20746865207a65726f20616464726573730000600082015250565b600061152f601e83610f58565b915061153a826114f9565b602082019050919050565b6000602082019050818103600083015261155e81611522565b9050919050565b7f5472616e7366657220746f20746865207a65726f206164647265737300000000600082015250565b600061159b601c83610f58565b91506115a682611565565b602082019050919050565b600060208201905081810360008301526115ca8161158e565b9050919050565b60006115dc82611062565b91506115e783611062565b92508282019050808211156115ff576115fe6112e6565b5b92915050565b7f4d696e7420746f20746865207a65726f20616464726573730000000000000000600082015250565b600061163b601883610f58565b915061164682611605565b602082019050919050565b6000602082019050818103600083015261166a8161162e565b9050919050565b7f4275726e2066726f6d20746865207a65726f2061646472657373000000000000600082015250565b60006116a7601a83610f58565b91506116b282611671565b602082019050919050565b600060208201905081810360008301526116d68161169a565b905091905056fea2646970667358221220781170149f8b6b178f92e3640d6af0bf9c22cc1bb8b8a915cd43fc5c402aaaf664736f6c63430008180033",
  "devdoc": {
    "events": {
      "Approval(address,address,uint256)": {
        "details": "Triggers on any successful call to approve(address spender, uint256 amount)."
      },
      "OwnershipTransferred(address,address)": {
        "details": "Emitted when ownership of the contract is transferred from `previousOwner` to `newOwner`."
      },
      "Transfer(address,address,uint256)": {
        "details": "Triggers when tokens are transferred, including zero value transfers."
      }
    },
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner`.",
        "params": {
          "spender": "The address which will spend the funds.",
          "tokenOwner": "The address which owns the funds."
        }
      },
      "approve(address,uint256)": {
        "details": "Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.",
        "params": {
          "amount": "The amount of tokens to be spent.",
          "spender": "The address which will spend the funds."
        }
      },
      "balanceOf(address)": {
        "details": "Returns the balance of a specific account.",
        "params": {
          "account": "Address of the account to query."
        }
      },
      "burn(uint256)": {
        "details": "Burns a specific amount of tokens.",
        "params": {
          "amount": "The amount of token to be burned."
        }
      },
      "burnFrom(address,uint256)": {
        "details": "Burns a specific amount of tokens from the specified address and decrements allowance.",
        "params": {
          "account": "The address to burn tokens from.",
          "amount": "The amount of token to be burned."
        }
      },
      "constructor": {
        "details": "Constructor that initializes the contract.",
        "params": {
          "initialOwner": "Address of the initial owner."
        }
      },
      "mint(address,uint256)": {
        "details": "Function to mint tokens.",
        "params": {
          "account": "The address that will receive the minted tokens.",
          "amount": "The amount of tokens to mint."
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "totalSupply()": {
        "details": "Returns the total supply of tokens."
      },
      "transfer(address,uint256)": {
        "details": "Transfers tokens to a specified address.",
        "params": {
          "amount": "The amount to be transferred.",
          "recipient": "The address to transfer to."
        }
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfers tokens from one address to another.",
        "params": {
          "amount": "The amount of tokens to be transferred.",
          "recipient": "The address which you want to transfer to.",
          "sender": "The address which you want to send tokens from."
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`).",
        "params": {
          "newOwner": "The address of the new owner."
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "decimals()": {
        "notice": "Number of decimals."
      },
      "name()": {
        "notice": "Token name."
      },
      "symbol()": {
        "notice": "Token symbol."
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 744,
        "contract": "contracts/repToken.sol:RepToken",
        "label": "name",
        "offset": 0,
        "slot": "0",
        "type": "t_string_storage"
      },
      {
        "astId": 748,
        "contract": "contracts/repToken.sol:RepToken",
        "label": "symbol",
        "offset": 0,
        "slot": "1",
        "type": "t_string_storage"
      },
      {
        "astId": 752,
        "contract": "contracts/repToken.sol:RepToken",
        "label": "decimals",
        "offset": 0,
        "slot": "2",
        "type": "t_uint8"
      },
      {
        "astId": 755,
        "contract": "contracts/repToken.sol:RepToken",
        "label": "_totalSupply",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 760,
        "contract": "contracts/repToken.sol:RepToken",
        "label": "_balances",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 767,
        "contract": "contracts/repToken.sol:RepToken",
        "label": "_allowances",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
      },
      {
        "astId": 770,
        "contract": "contracts/repToken.sol:RepToken",
        "label": "_contractOwner",
        "offset": 0,
        "slot": "6",
        "type": "t_address"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_uint256)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  }
}