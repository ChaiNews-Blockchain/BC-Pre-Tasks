{
  "address": "0x0D12e8ac3533638B564499940046321a7295D3C4",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "initialOwner",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "MAX_SUPPLY",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenOwner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burnFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x3b599b6b466804fb475fb3b9c40d0d52bb23505a329c4d45f8a9cee6b87bbd11",
  "receipt": {
    "to": null,
    "from": "0x059b805AcB11fF78a204dCa147880b76386239aC",
    "contractAddress": "0x0D12e8ac3533638B564499940046321a7295D3C4",
    "transactionIndex": 1,
    "gasUsed": "2278647",
    "logsBloom": "0x
    "blockHash": "0x0f7d1907e97cd389cf8595683bb3ee0e5564cbd4d72cbe44157714f56483f082",
    "transactionHash": "0x3b599b6b466804fb475fb3b9c40d0d52bb23505a329c4d45f8a9cee6b87bbd11",
    "logs": [
      {
        "transactionIndex": 1,
        "blockNumber": 70343032,
        "transactionHash": "0x3b599b6b466804fb475fb3b9c40d0d52bb23505a329c4d45f8a9cee6b87bbd11",
        "address": "0x0D12e8ac3533638B564499940046321a7295D3C4",
        "topics": [
          "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000059b805acb11ff78a204dca147880b76386239ac"
        ],
        "data": "0x00000000000000000000000000000000000000000000d3c21bcecceda1000000",
        "logIndex": 0,
        "blockHash": "0x0f7d1907e97cd389cf8595683bb3ee0e5564cbd4d72cbe44157714f56483f082"
      },
      {
        "transactionIndex": 1,
        "blockNumber": 70343032,
        "transactionHash": "0x3b599b6b466804fb475fb3b9c40d0d52bb23505a329c4d45f8a9cee6b87bbd11",
        "address": "0x0D12e8ac3533638B564499940046321a7295D3C4",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000059b805acb11ff78a204dca147880b76386239ac"
        ],
        "data": "0x",
        "logIndex": 1,
        "blockHash": "0x0f7d1907e97cd389cf8595683bb3ee0e5564cbd4d72cbe44157714f56483f082"
      }
    ],
    "blockNumber": 70343032,
    "cumulativeGasUsed": "2278647",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x059b805AcB11fF78a204dCa147880b76386239aC"
  ],
  "numDeployments": 5,
  "solcInputHash": "58c30e0a8d34ebd9ed08ff0ccbe9fd04",
  "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MAX_SUPPLY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Triggers on any successful call to approve(address spender, uint256 amount).\"},\"OwnershipTransferred(address,address)\":{\"details\":\"Emitted when ownership of the contract is transferred from `previousOwner` to `newOwner`.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Triggers when tokens are transferred, including zero value transfers.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner`.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"tokenOwner\":\"The address which owns the funds.\"}},\"approve(address,uint256)\":{\"details\":\"Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.\",\"params\":{\"amount\":\"The amount of tokens to be spent.\",\"spender\":\"The address which will spend the funds.\"}},\"balanceOf(address)\":{\"details\":\"Returns the balance of a specific account.\",\"params\":{\"account\":\"Address of the account to query.\"}},\"burn(uint256)\":{\"details\":\"Burns a specific amount of tokens.\",\"params\":{\"amount\":\"The amount of token to be burned.\"}},\"burnFrom(address,uint256)\":{\"details\":\"Burns a specific amount of tokens from the specified address and decrements allowance.\",\"params\":{\"account\":\"The address to burn tokens from.\",\"amount\":\"The amount of token to be burned.\"}},\"constructor\":{\"details\":\"Constructor that initializes the contract and mints the initial supply to the owner.\",\"params\":{\"initialOwner\":\"Address of the initial owner.\"}},\"mint(address,uint256)\":{\"details\":\"Function to mint tokens.\",\"params\":{\"account\":\"The address that will receive the minted tokens.\",\"amount\":\"The amount of tokens to mint.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pause()\":{\"details\":\"Triggers stopped state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"totalSupply()\":{\"details\":\"Returns the total supply of tokens.\"},\"transfer(address,uint256)\":{\"details\":\"Transfers tokens to a specified address.\",\"params\":{\"amount\":\"The amount to be transferred.\",\"recipient\":\"The address to transfer to.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers tokens from one address to another.\",\"params\":{\"amount\":\"The amount of tokens to be transferred.\",\"recipient\":\"The address which you want to transfer to.\",\"sender\":\"The address which you want to send tokens from.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`).\",\"params\":{\"newOwner\":\"The address of the new owner.\"}},\"unpause()\":{\"details\":\"Returns to normal state.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"MAX_SUPPLY()\":{\"notice\":\"Maximum supply limit.\"},\"decimals()\":{\"notice\":\"Number of decimals.\"},\"name()\":{\"notice\":\"Token name.\"},\"symbol()\":{\"notice\":\"Token symbol.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/chainewsToken.sol\":\"ChainewsToken\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/chainewsToken.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.20;\\n\\nimport \\\"./interfaces/IERC20.sol\\\";\\nimport \\\"./interfaces/IERC20Burnable.sol\\\";\\nimport \\\"./interfaces/IERC20Pausable.sol\\\";\\nimport \\\"./interfaces/IOwnable.sol\\\";\\n\\ncontract ChainewsToken is IERC20, IERC20Burnable, IERC20Pausable, IOwnable {\\n    /**\\n     * Token name.\\n     */\\n    string public name = \\\"ChainewsToken\\\";\\n\\n    /**\\n     * Token symbol.\\n     */\\n    string public symbol = \\\"CHN\\\";\\n\\n    /**\\n     * Number of decimals.\\n     */\\n    uint8 public decimals = 18;\\n\\n    /**\\n     * Total supply of the token.\\n     */\\n    uint256 private _totalSupply;\\n\\n    /**\\n     * Token paused state.\\n     */\\n    bool private _paused;\\n\\n    /**\\n     * Initial supply.\\n     */\\n    uint256 private constant INITIAL_SUPPLY = 1000000 * 10**18;\\n\\n    /**\\n     * Maximum supply limit.\\n     */\\n    uint256 public constant MAX_SUPPLY = 2000000 * 10**18;\\n\\n    /**\\n     * Balances of accounts.\\n     */\\n    mapping(address => uint256) private _balances;\\n\\n    /**\\n     * Allowances for accounts.\\n     */\\n    mapping(address => mapping(address => uint256)) private _allowances;\\n\\n    /**\\n     * Contract owner.\\n     */\\n    address private _contractOwner;\\n\\n\\n    /**\\n     * @dev Modifier to check if the caller is the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(msg.sender == _contractOwner, \\\"Not the contract owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Modifier to check if the token is not paused.\\n     */\\n    modifier whenNotPaused() {\\n        require(!_paused, \\\"Token is paused\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Modifier to check if the token is paused.\\n     */\\n    modifier whenPaused() {\\n        require(_paused, \\\"Token is not paused\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Constructor that initializes the contract and mints the initial supply to the owner.\\n     * @param initialOwner Address of the initial owner.\\n     */\\n    constructor(address initialOwner) {\\n        _contractOwner = initialOwner;\\n        _paused = false;\\n        _mint(initialOwner, INITIAL_SUPPLY);\\n        emit OwnershipTransferred(address(0), initialOwner);\\n    }\\n\\n    // IERC20 implementation\\n\\n    /**\\n     * @dev Returns the total supply of tokens.\\n     */\\n    function totalSupply() external view override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev Returns the balance of a specific account.\\n     * @param account Address of the account to query.\\n     */\\n    function balanceOf(address account) external view override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev Transfers tokens to a specified address.\\n     * @param recipient The address to transfer to.\\n     * @param amount The amount to be transferred.\\n     */\\n    function transfer(address recipient, uint256 amount) external override whenNotPaused returns (bool) {\\n        _transfer(msg.sender, recipient, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner`.\\n     * @param tokenOwner The address which owns the funds.\\n     * @param spender The address which will spend the funds.\\n     */\\n    function allowance(address tokenOwner, address spender) external view override returns (uint256) {\\n        return _allowances[tokenOwner][spender];\\n    }\\n\\n    /**\\n     * @dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.\\n     * @param spender The address which will spend the funds.\\n     * @param amount The amount of tokens to be spent.\\n     */\\n    function approve(address spender, uint256 amount) external override whenNotPaused returns (bool) {\\n        _approve(msg.sender, spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Transfers tokens from one address to another.\\n     * @param sender The address which you want to send tokens from.\\n     * @param recipient The address which you want to transfer to.\\n     * @param amount The amount of tokens to be transferred.\\n     */\\n    function transferFrom(address sender, address recipient, uint256 amount) external override whenNotPaused returns (bool) {\\n        _transfer(sender, recipient, amount);\\n        _approve(sender, msg.sender, _allowances[sender][msg.sender] - amount);\\n        return true;\\n    }\\n\\n    // IERC20Burnable implementation\\n\\n    /**\\n     * @dev Burns a specific amount of tokens.\\n     * @param amount The amount of token to be burned.\\n     */\\n    function burn(uint256 amount) external override whenNotPaused {\\n        _burn(msg.sender, amount);\\n    }\\n\\n    /**\\n     * @dev Burns a specific amount of tokens from the specified address and decrements allowance.\\n     * @param account The address to burn tokens from.\\n     * @param amount The amount of token to be burned.\\n     */\\n    function burnFrom(address account, uint256 amount) external override whenNotPaused {\\n        uint256 decreasedAllowance = _allowances[account][msg.sender] - amount;\\n        _approve(account, msg.sender, decreasedAllowance);\\n        _burn(account, amount);\\n    }\\n\\n    // IERC20Pausable implementation\\n\\n    /**\\n     * @dev Returns true if the contract is paused, and false otherwise.\\n     */\\n    function paused() external view override returns (bool) {\\n        return _paused;\\n    }\\n\\n    /**\\n     * @dev Triggers stopped state.\\n     */\\n    function pause() external override onlyOwner whenNotPaused {\\n        _paused = true;\\n        emit Paused(msg.sender);\\n    }\\n\\n    /**\\n     * @dev Returns to normal state.\\n     */\\n    function unpause() external override onlyOwner whenPaused {\\n        _paused = false;\\n        emit Unpaused(msg.sender);\\n    }\\n\\n    // IOwnable implementation\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() external view override returns (address) {\\n        return _contractOwner;\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * @param newOwner The address of the new owner.\\n     */\\n    function transferOwnership(address newOwner) external override onlyOwner {\\n        require(newOwner != address(0), \\\"New owner is the zero address\\\");\\n        emit OwnershipTransferred(_contractOwner, newOwner);\\n        _contractOwner = newOwner;\\n    }\\n\\n    // Public mint function\\n\\n    /**\\n     * @dev Function to mint tokens.\\n     * @param account The address that will receive the minted tokens.\\n     * @param amount The amount of tokens to mint.\\n     */\\n    function mint(address account, uint256 amount) external onlyOwner whenNotPaused {\\n        require(_totalSupply + amount <= MAX_SUPPLY, \\\"Minting would exceed max supply\\\");\\n        _mint(account, amount);\\n    }\\n\\n    // Internal functions\\n\\n    /**\\n     * @dev Moves tokens `amount` from `sender` to `recipient`.\\n     * @param sender The address to send tokens from.\\n     * @param recipient The address to transfer to.\\n     * @param amount The amount of tokens to be transferred.\\n     */\\n    function _transfer(address sender, address recipient, uint256 amount) internal {\\n        require(sender != address(0), \\\"Transfer from the zero address\\\");\\n        require(recipient != address(0), \\\"Transfer to the zero address\\\");\\n\\n        _balances[sender] -= amount;\\n        _balances[recipient] += amount;\\n        emit Transfer(sender, recipient, amount);\\n    }\\n\\n    /**\\n     * @dev Creates `amount` tokens and assigns them to `account`, increasing the total supply.\\n     * @param account The address that will receive the minted tokens.\\n     * @param amount The amount of tokens to mint.\\n     */\\n    function _mint(address account, uint256 amount) internal {\\n        require(account != address(0), \\\"Mint to the zero address\\\");\\n\\n        _totalSupply += amount;\\n        _balances[account] += amount;\\n        emit Transfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the total supply.\\n     * @param account The address that will have the tokens burned.\\n     * @param amount The amount of tokens to be burned.\\n     */\\n    function _burn(address account, uint256 amount) internal {\\n        require(account != address(0), \\\"Burn from the zero address\\\");\\n\\n        _balances[account] -= amount;\\n        _totalSupply -= amount;\\n        emit Transfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `tokenOwner`'s tokens.\\n     * @param tokenOwner The owner of the tokens.\\n     * @param spender The spender who will be allowed to spend the tokens.\\n     * @param amount The amount of tokens to approve.\\n     */\\n    function _approve(address tokenOwner, address spender, uint256 amount) internal {\\n        require(tokenOwner != address(0), \\\"Approve from the zero address\\\");\\n        require(spender != address(0), \\\"Approve to the zero address\\\");\\n\\n        _allowances[tokenOwner][spender] = amount;\\n        emit Approval(tokenOwner, spender, amount);\\n    }\\n}\\n\\n\",\"keccak256\":\"0x77beed3dfe166e5b5a311a9f97cce4128c211b17ff970b939f25bdc9efc4bbde\",\"license\":\"MIT\"},\"contracts/interfaces/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.20;\\n\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the total token supply.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the account balance of another account with address `account`.\\n     * @param account The address from which the balance will be retrieved.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Transfers `amount` of tokens to address `recipient`, and MUST fire the Transfer event. The\\n     * function SHOULD throw if the `sender` account balance does not have enough tokens to spend.\\n     * @param recipient The address of the recipient.\\n     * @param amount The amount of token to be transferred.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the amount which `spender` is still allowed to withdraw from `owner`.\\n     * @param owner The address of the account owning tokens.\\n     * @param spender The address of the account able to transfer the tokens.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Allows `spender` to withdraw from your account multiple times, up to\\n     * the `amount` amount. If this function is called again it overwrites the current\\n     * allowance with `amount`.\\n     * @param spender The address of the account able to transfer the tokens.\\n     * @param amount The amount of tokens to be approved for transfer.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Transfers `amount` of tokens from address `sender` to address `recipient`, and MUST fire the\\n     * Transfer event.\\n     * @param sender The address of the sender.\\n     * @param recipient The address of the recipient.\\n     * @param amount The amount of token to be transferred.\\n     */\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Triggers when tokens are transferred, including zero value transfers.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Triggers on any successful call to approve(address spender, uint256 amount).\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0xc56b0b2f299f62248271031bc7308529b67b9b0ce942cb84e10a8c6861a5a94a\",\"license\":\"MIT\"},\"contracts/interfaces/IERC20Burnable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.20;\\n\\ninterface IERC20Burnable {\\n    /**\\n     * @dev Burns `amount` of tokens from the caller's account.\\n     * @param amount The amount of tokens to be burned.\\n     */\\n    function burn(uint256 amount) external;\\n\\n    /**\\n     * @dev Burns `amount` of tokens from `account`, deducting from the caller's allowance.\\n     * @param account The address from which the tokens will be burned.\\n     * @param amount The amount of tokens to be burned.\\n     */\\n    function burnFrom(address account, uint256 amount) external;\\n}\\n\",\"keccak256\":\"0x5230fec8b40882492679a253858038b32090e33d6d794acdeb1138bdf2e99e9a\",\"license\":\"MIT\"},\"contracts/interfaces/IERC20Pausable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.20;\\n\\ninterface IERC20Pausable {\\n    /**\\n     * @dev Returns true if the contract is paused, and false otherwise.\\n     */\\n    function paused() external view returns (bool);\\n\\n    /**\\n     * @dev Triggers stopped state.\\n     */\\n    function pause() external;\\n\\n    /**\\n     * @dev Returns to normal state.\\n     */\\n    function unpause() external;\\n\\n    /**\\n     * @dev Emitted when the pause is triggered by `account`.\\n     */\\n    event Paused(address account);\\n\\n    /**\\n     * @dev Emitted when the pause is lifted by `account`.\\n     */\\n    event Unpaused(address account);\\n}\\n\",\"keccak256\":\"0x34b0df35a1c263228ae9164db484c680f2acf3295b73c3b9aba4516f7f0d6916\",\"license\":\"MIT\"},\"contracts/interfaces/IOwnable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.20;\\n\\ninterface IOwnable {\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() external view returns (address);\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * @param newOwner The address of the new owner.\\n     */\\n    function transferOwnership(address newOwner) external;\\n\\n    /**\\n     * @dev Emitted when ownership of the contract is transferred from `previousOwner` to `newOwner`.\\n     */\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n}\\n\",\"keccak256\":\"0x43aad94ae4d1567894f50e99c398d24912f010409b6bf5dfbaac4807eba3dc81\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040526040518060400160405280600d81526020017f436861696e657773546f6b656e00000000000000000000000000000000000000815250600090816200004a919062000586565b506040518060400160405280600381526020017f43484e00000000000000000000000000000000000000000000000000000000008152506001908162000091919062000586565b506012600260006101000a81548160ff021916908360ff160217905550348015620000bb57600080fd5b50604051620025cf380380620025cf8339818101604052810190620000e19190620006d7565b80600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600460006101000a81548160ff021916908315150217905550620001598169d3c21bcecceda1000000620001bb60201b60201c565b8073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35062000824565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036200022d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162000224906200076a565b60405180910390fd5b8060036000828254620002419190620007bb565b9250508190555080600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254620002999190620007bb565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405162000300919062000807565b60405180910390a35050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200038e57607f821691505b602082108103620003a457620003a362000346565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026200040e7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620003cf565b6200041a8683620003cf565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b600062000467620004616200045b8462000432565b6200043c565b62000432565b9050919050565b6000819050919050565b620004838362000446565b6200049b62000492826200046e565b848454620003dc565b825550505050565b600090565b620004b2620004a3565b620004bf81848462000478565b505050565b5b81811015620004e757620004db600082620004a8565b600181019050620004c5565b5050565b601f82111562000536576200050081620003aa565b6200050b84620003bf565b810160208510156200051b578190505b620005336200052a85620003bf565b830182620004c4565b50505b505050565b600082821c905092915050565b60006200055b600019846008026200053b565b1980831691505092915050565b600062000576838362000548565b9150826002028217905092915050565b62000591826200030c565b67ffffffffffffffff811115620005ad57620005ac62000317565b5b620005b9825462000375565b620005c6828285620004eb565b600060209050601f831160018114620005fe5760008415620005e9578287015190505b620005f5858262000568565b86555062000665565b601f1984166200060e86620003aa565b60005b82811015620006385784890151825560018201915060208501945060208101905062000611565b8683101562000658578489015162000654601f89168262000548565b8355505b6001600288020188555050505b505050505050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200069f8262000672565b9050919050565b620006b18162000692565b8114620006bd57600080fd5b50565b600081519050620006d181620006a6565b92915050565b600060208284031215620006f057620006ef6200066d565b5b60006200070084828501620006c0565b91505092915050565b600082825260208201905092915050565b7f4d696e7420746f20746865207a65726f20616464726573730000000000000000600082015250565b60006200075260188362000709565b91506200075f826200071a565b602082019050919050565b60006020820190508181036000830152620007858162000743565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000620007c88262000432565b9150620007d58362000432565b9250828201905080821115620007f057620007ef6200078c565b5b92915050565b620008018162000432565b82525050565b60006020820190506200081e6000830184620007f6565b92915050565b611d9b80620008346000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c80635c975abb116100a25780638da5cb5b116100715780638da5cb5b146102a957806395d89b41146102c7578063a9059cbb146102e5578063dd62ed3e14610315578063f2fde38b1461034557610116565b80635c975abb1461023557806370a082311461025357806379cc6790146102835780638456cb591461029f57610116565b8063313ce567116100e9578063313ce567146101b757806332cb6b0c146101d55780633f4ba83a146101f357806340c10f19146101fd57806342966c681461021957610116565b806306fdde031461011b578063095ea7b31461013957806318160ddd1461016957806323b872dd14610187575b600080fd5b610123610361565b6040516101309190611521565b60405180910390f35b610153600480360381019061014e91906115dc565b6103ef565b6040516101609190611637565b60405180910390f35b610171610456565b60405161017e9190611661565b60405180910390f35b6101a1600480360381019061019c919061167c565b610460565b6040516101ae9190611637565b60405180910390f35b6101bf61055a565b6040516101cc91906116eb565b60405180910390f35b6101dd61056d565b6040516101ea9190611661565b60405180910390f35b6101fb61057c565b005b610217600480360381019061021291906115dc565b6106af565b005b610233600480360381019061022e9190611706565b6107f8565b005b61023d610855565b60405161024a9190611637565b60405180910390f35b61026d60048036038101906102689190611733565b61086c565b60405161027a9190611661565b60405180910390f35b61029d600480360381019061029891906115dc565b6108b5565b005b6102a76109ab565b005b6102b1610adf565b6040516102be919061176f565b60405180910390f35b6102cf610b09565b6040516102dc9190611521565b60405180910390f35b6102ff60048036038101906102fa91906115dc565b610b97565b60405161030c9190611637565b60405180910390f35b61032f600480360381019061032a919061178a565b610bfe565b60405161033c9190611661565b60405180910390f35b61035f600480360381019061035a9190611733565b610c85565b005b6000805461036e906117f9565b80601f016020809104026020016040519081016040528092919081815260200182805461039a906117f9565b80156103e75780601f106103bc576101008083540402835291602001916103e7565b820191906000526020600020905b8154815290600101906020018083116103ca57829003601f168201915b505050505081565b6000600460009054906101000a900460ff1615610441576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161043890611876565b60405180910390fd5b61044c338484610e44565b6001905092915050565b6000600354905090565b6000600460009054906101000a900460ff16156104b2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104a990611876565b60405180910390fd5b6104bd84848461100d565b61054f843384600660008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461054a91906118c5565b610e44565b600190509392505050565b600260009054906101000a900460ff1681565b6a01a784379d99db4200000081565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461060c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060390611945565b60405180910390fd5b600460009054906101000a900460ff1661065b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610652906119b1565b60405180910390fd5b6000600460006101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa336040516106a5919061176f565b60405180910390a1565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461073f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161073690611945565b60405180910390fd5b600460009054906101000a900460ff161561078f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161078690611876565b60405180910390fd5b6a01a784379d99db42000000816003546107a991906119d1565b11156107ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107e190611a51565b60405180910390fd5b6107f48282611201565b5050565b600460009054906101000a900460ff1615610848576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161083f90611876565b60405180910390fd5b6108523382611349565b50565b6000600460009054906101000a900460ff16905090565b6000600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600460009054906101000a900460ff1615610905576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108fc90611876565b60405180910390fd5b600081600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461098f91906118c5565b905061099c833383610e44565b6109a68383611349565b505050565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610a3b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a3290611945565b60405180910390fd5b600460009054906101000a900460ff1615610a8b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a8290611876565b60405180910390fd5b6001600460006101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25833604051610ad5919061176f565b60405180910390a1565b6000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60018054610b16906117f9565b80601f0160208091040260200160405190810160405280929190818152602001828054610b42906117f9565b8015610b8f5780601f10610b6457610100808354040283529160200191610b8f565b820191906000526020600020905b815481529060010190602001808311610b7257829003601f168201915b505050505081565b6000600460009054906101000a900460ff1615610be9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610be090611876565b60405180910390fd5b610bf433848461100d565b6001905092915050565b6000600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610d15576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d0c90611945565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610d84576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d7b90611abd565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610eb3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610eaa90611b29565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610f22576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f1990611b95565b60405180910390fd5b80600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516110009190611661565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361107c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161107390611c01565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036110eb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110e290611c6d565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461113a91906118c5565b9250508190555080600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461119091906119d1565b925050819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516111f49190611661565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611270576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161126790611cd9565b60405180910390fd5b806003600082825461128291906119d1565b9250508190555080600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546112d891906119d1565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161133d9190611661565b60405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036113b8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113af90611d45565b60405180910390fd5b80600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461140791906118c5565b92505081905550806003600082825461142091906118c5565b92505081905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516114859190611661565b60405180910390a35050565b600081519050919050565b600082825260208201905092915050565b60005b838110156114cb5780820151818401526020810190506114b0565b60008484015250505050565b6000601f19601f8301169050919050565b60006114f382611491565b6114fd818561149c565b935061150d8185602086016114ad565b611516816114d7565b840191505092915050565b6000602082019050818103600083015261153b81846114e8565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061157382611548565b9050919050565b61158381611568565b811461158e57600080fd5b50565b6000813590506115a08161157a565b92915050565b6000819050919050565b6115b9816115a6565b81146115c457600080fd5b50565b6000813590506115d6816115b0565b92915050565b600080604083850312156115f3576115f2611543565b5b600061160185828601611591565b9250506020611612858286016115c7565b9150509250929050565b60008115159050919050565b6116318161161c565b82525050565b600060208201905061164c6000830184611628565b92915050565b61165b816115a6565b82525050565b60006020820190506116766000830184611652565b92915050565b60008060006060848603121561169557611694611543565b5b60006116a386828701611591565b93505060206116b486828701611591565b92505060406116c5868287016115c7565b9150509250925092565b600060ff82169050919050565b6116e5816116cf565b82525050565b600060208201905061170060008301846116dc565b92915050565b60006020828403121561171c5761171b611543565b5b600061172a848285016115c7565b91505092915050565b60006020828403121561174957611748611543565b5b600061175784828501611591565b91505092915050565b61176981611568565b82525050565b60006020820190506117846000830184611760565b92915050565b600080604083850312156117a1576117a0611543565b5b60006117af85828601611591565b92505060206117c085828601611591565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061181157607f821691505b602082108103611824576118236117ca565b5b50919050565b7f546f6b656e206973207061757365640000000000000000000000000000000000600082015250565b6000611860600f8361149c565b915061186b8261182a565b602082019050919050565b6000602082019050818103600083015261188f81611853565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006118d0826115a6565b91506118db836115a6565b92508282039050818111156118f3576118f2611896565b5b92915050565b7f4e6f742074686520636f6e7472616374206f776e657200000000000000000000600082015250565b600061192f60168361149c565b915061193a826118f9565b602082019050919050565b6000602082019050818103600083015261195e81611922565b9050919050565b7f546f6b656e206973206e6f742070617573656400000000000000000000000000600082015250565b600061199b60138361149c565b91506119a682611965565b602082019050919050565b600060208201905081810360008301526119ca8161198e565b9050919050565b60006119dc826115a6565b91506119e7836115a6565b92508282019050808211156119ff576119fe611896565b5b92915050565b7f4d696e74696e6720776f756c6420657863656564206d617820737570706c7900600082015250565b6000611a3b601f8361149c565b9150611a4682611a05565b602082019050919050565b60006020820190508181036000830152611a6a81611a2e565b9050919050565b7f4e6577206f776e657220697320746865207a65726f2061646472657373000000600082015250565b6000611aa7601d8361149c565b9150611ab282611a71565b602082019050919050565b60006020820190508181036000830152611ad681611a9a565b9050919050565b7f417070726f76652066726f6d20746865207a65726f2061646472657373000000600082015250565b6000611b13601d8361149c565b9150611b1e82611add565b602082019050919050565b60006020820190508181036000830152611b4281611b06565b9050919050565b7f417070726f766520746f20746865207a65726f20616464726573730000000000600082015250565b6000611b7f601b8361149c565b9150611b8a82611b49565b602082019050919050565b60006020820190508181036000830152611bae81611b72565b9050919050565b7f5472616e736665722066726f6d20746865207a65726f20616464726573730000600082015250565b6000611beb601e8361149c565b9150611bf682611bb5565b602082019050919050565b60006020820190508181036000830152611c1a81611bde565b9050919050565b7f5472616e7366657220746f20746865207a65726f206164647265737300000000600082015250565b6000611c57601c8361149c565b9150611c6282611c21565b602082019050919050565b60006020820190508181036000830152611c8681611c4a565b9050919050565b7f4d696e7420746f20746865207a65726f20616464726573730000000000000000600082015250565b6000611cc360188361149c565b9150611cce82611c8d565b602082019050919050565b60006020820190508181036000830152611cf281611cb6565b9050919050565b7f4275726e2066726f6d20746865207a65726f2061646472657373000000000000600082015250565b6000611d2f601a8361149c565b9150611d3a82611cf9565b602082019050919050565b60006020820190508181036000830152611d5e81611d22565b905091905056fea26469706673582212206a670b6101c17ef33fda062f24d6809a7525f82f6f23e382a95a462ae721b88064736f6c63430008180033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101165760003560e01c80635c975abb116100a25780638da5cb5b116100715780638da5cb5b146102a957806395d89b41146102c7578063a9059cbb146102e5578063dd62ed3e14610315578063f2fde38b1461034557610116565b80635c975abb1461023557806370a082311461025357806379cc6790146102835780638456cb591461029f57610116565b8063313ce567116100e9578063313ce567146101b757806332cb6b0c146101d55780633f4ba83a146101f357806340c10f19146101fd57806342966c681461021957610116565b806306fdde031461011b578063095ea7b31461013957806318160ddd1461016957806323b872dd14610187575b600080fd5b610123610361565b6040516101309190611521565b60405180910390f35b610153600480360381019061014e91906115dc565b6103ef565b6040516101609190611637565b60405180910390f35b610171610456565b60405161017e9190611661565b60405180910390f35b6101a1600480360381019061019c919061167c565b610460565b6040516101ae9190611637565b60405180910390f35b6101bf61055a565b6040516101cc91906116eb565b60405180910390f35b6101dd61056d565b6040516101ea9190611661565b60405180910390f35b6101fb61057c565b005b610217600480360381019061021291906115dc565b6106af565b005b610233600480360381019061022e9190611706565b6107f8565b005b61023d610855565b60405161024a9190611637565b60405180910390f35b61026d60048036038101906102689190611733565b61086c565b60405161027a9190611661565b60405180910390f35b61029d600480360381019061029891906115dc565b6108b5565b005b6102a76109ab565b005b6102b1610adf565b6040516102be919061176f565b60405180910390f35b6102cf610b09565b6040516102dc9190611521565b60405180910390f35b6102ff60048036038101906102fa91906115dc565b610b97565b60405161030c9190611637565b60405180910390f35b61032f600480360381019061032a919061178a565b610bfe565b60405161033c9190611661565b60405180910390f35b61035f600480360381019061035a9190611733565b610c85565b005b6000805461036e906117f9565b80601f016020809104026020016040519081016040528092919081815260200182805461039a906117f9565b80156103e75780601f106103bc576101008083540402835291602001916103e7565b820191906000526020600020905b8154815290600101906020018083116103ca57829003601f168201915b505050505081565b6000600460009054906101000a900460ff1615610441576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161043890611876565b60405180910390fd5b61044c338484610e44565b6001905092915050565b6000600354905090565b6000600460009054906101000a900460ff16156104b2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104a990611876565b60405180910390fd5b6104bd84848461100d565b61054f843384600660008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461054a91906118c5565b610e44565b600190509392505050565b600260009054906101000a900460ff1681565b6a01a784379d99db4200000081565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461060c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060390611945565b60405180910390fd5b600460009054906101000a900460ff1661065b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610652906119b1565b60405180910390fd5b6000600460006101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa336040516106a5919061176f565b60405180910390a1565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461073f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161073690611945565b60405180910390fd5b600460009054906101000a900460ff161561078f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161078690611876565b60405180910390fd5b6a01a784379d99db42000000816003546107a991906119d1565b11156107ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107e190611a51565b60405180910390fd5b6107f48282611201565b5050565b600460009054906101000a900460ff1615610848576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161083f90611876565b60405180910390fd5b6108523382611349565b50565b6000600460009054906101000a900460ff16905090565b6000600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600460009054906101000a900460ff1615610905576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108fc90611876565b60405180910390fd5b600081600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461098f91906118c5565b905061099c833383610e44565b6109a68383611349565b505050565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610a3b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a3290611945565b60405180910390fd5b600460009054906101000a900460ff1615610a8b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a8290611876565b60405180910390fd5b6001600460006101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25833604051610ad5919061176f565b60405180910390a1565b6000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60018054610b16906117f9565b80601f0160208091040260200160405190810160405280929190818152602001828054610b42906117f9565b8015610b8f5780601f10610b6457610100808354040283529160200191610b8f565b820191906000526020600020905b815481529060010190602001808311610b7257829003601f168201915b505050505081565b6000600460009054906101000a900460ff1615610be9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610be090611876565b60405180910390fd5b610bf433848461100d565b6001905092915050565b6000600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610d15576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d0c90611945565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610d84576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d7b90611abd565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610eb3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610eaa90611b29565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610f22576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f1990611b95565b60405180910390fd5b80600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516110009190611661565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361107c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161107390611c01565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036110eb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110e290611c6d565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461113a91906118c5565b9250508190555080600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461119091906119d1565b925050819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516111f49190611661565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611270576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161126790611cd9565b60405180910390fd5b806003600082825461128291906119d1565b9250508190555080600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546112d891906119d1565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161133d9190611661565b60405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036113b8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113af90611d45565b60405180910390fd5b80600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461140791906118c5565b92505081905550806003600082825461142091906118c5565b92505081905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516114859190611661565b60405180910390a35050565b600081519050919050565b600082825260208201905092915050565b60005b838110156114cb5780820151818401526020810190506114b0565b60008484015250505050565b6000601f19601f8301169050919050565b60006114f382611491565b6114fd818561149c565b935061150d8185602086016114ad565b611516816114d7565b840191505092915050565b6000602082019050818103600083015261153b81846114e8565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061157382611548565b9050919050565b61158381611568565b811461158e57600080fd5b50565b6000813590506115a08161157a565b92915050565b6000819050919050565b6115b9816115a6565b81146115c457600080fd5b50565b6000813590506115d6816115b0565b92915050565b600080604083850312156115f3576115f2611543565b5b600061160185828601611591565b9250506020611612858286016115c7565b9150509250929050565b60008115159050919050565b6116318161161c565b82525050565b600060208201905061164c6000830184611628565b92915050565b61165b816115a6565b82525050565b60006020820190506116766000830184611652565b92915050565b60008060006060848603121561169557611694611543565b5b60006116a386828701611591565b93505060206116b486828701611591565b92505060406116c5868287016115c7565b9150509250925092565b600060ff82169050919050565b6116e5816116cf565b82525050565b600060208201905061170060008301846116dc565b92915050565b60006020828403121561171c5761171b611543565b5b600061172a848285016115c7565b91505092915050565b60006020828403121561174957611748611543565b5b600061175784828501611591565b91505092915050565b61176981611568565b82525050565b60006020820190506117846000830184611760565b92915050565b600080604083850312156117a1576117a0611543565b5b60006117af85828601611591565b92505060206117c085828601611591565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061181157607f821691505b602082108103611824576118236117ca565b5b50919050565b7f546f6b656e206973207061757365640000000000000000000000000000000000600082015250565b6000611860600f8361149c565b915061186b8261182a565b602082019050919050565b6000602082019050818103600083015261188f81611853565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006118d0826115a6565b91506118db836115a6565b92508282039050818111156118f3576118f2611896565b5b92915050565b7f4e6f742074686520636f6e7472616374206f776e657200000000000000000000600082015250565b600061192f60168361149c565b915061193a826118f9565b602082019050919050565b6000602082019050818103600083015261195e81611922565b9050919050565b7f546f6b656e206973206e6f742070617573656400000000000000000000000000600082015250565b600061199b60138361149c565b91506119a682611965565b602082019050919050565b600060208201905081810360008301526119ca8161198e565b9050919050565b60006119dc826115a6565b91506119e7836115a6565b92508282019050808211156119ff576119fe611896565b5b92915050565b7f4d696e74696e6720776f756c6420657863656564206d617820737570706c7900600082015250565b6000611a3b601f8361149c565b9150611a4682611a05565b602082019050919050565b60006020820190508181036000830152611a6a81611a2e565b9050919050565b7f4e6577206f776e657220697320746865207a65726f2061646472657373000000600082015250565b6000611aa7601d8361149c565b9150611ab282611a71565b602082019050919050565b60006020820190508181036000830152611ad681611a9a565b9050919050565b7f417070726f76652066726f6d20746865207a65726f2061646472657373000000600082015250565b6000611b13601d8361149c565b9150611b1e82611add565b602082019050919050565b60006020820190508181036000830152611b4281611b06565b9050919050565b7f417070726f766520746f20746865207a65726f20616464726573730000000000600082015250565b6000611b7f601b8361149c565b9150611b8a82611b49565b602082019050919050565b60006020820190508181036000830152611bae81611b72565b9050919050565b7f5472616e736665722066726f6d20746865207a65726f20616464726573730000600082015250565b6000611beb601e8361149c565b9150611bf682611bb5565b602082019050919050565b60006020820190508181036000830152611c1a81611bde565b9050919050565b7f5472616e7366657220746f20746865207a65726f206164647265737300000000600082015250565b6000611c57601c8361149c565b9150611c6282611c21565b602082019050919050565b60006020820190508181036000830152611c8681611c4a565b9050919050565b7f4d696e7420746f20746865207a65726f20616464726573730000000000000000600082015250565b6000611cc360188361149c565b9150611cce82611c8d565b602082019050919050565b60006020820190508181036000830152611cf281611cb6565b9050919050565b7f4275726e2066726f6d20746865207a65726f2061646472657373000000000000600082015250565b6000611d2f601a8361149c565b9150611d3a82611cf9565b602082019050919050565b60006020820190508181036000830152611d5e81611d22565b905091905056fea26469706673582212206a670b6101c17ef33fda062f24d6809a7525f82f6f23e382a95a462ae721b88064736f6c63430008180033",
  "devdoc": {
    "events": {
      "Approval(address,address,uint256)": {
        "details": "Triggers on any successful call to approve(address spender, uint256 amount)."
      },
      "OwnershipTransferred(address,address)": {
        "details": "Emitted when ownership of the contract is transferred from `previousOwner` to `newOwner`."
      },
      "Paused(address)": {
        "details": "Emitted when the pause is triggered by `account`."
      },
      "Transfer(address,address,uint256)": {
        "details": "Triggers when tokens are transferred, including zero value transfers."
      },
      "Unpaused(address)": {
        "details": "Emitted when the pause is lifted by `account`."
      }
    },
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner`.",
        "params": {
          "spender": "The address which will spend the funds.",
          "tokenOwner": "The address which owns the funds."
        }
      },
      "approve(address,uint256)": {
        "details": "Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.",
        "params": {
          "amount": "The amount of tokens to be spent.",
          "spender": "The address which will spend the funds."
        }
      },
      "balanceOf(address)": {
        "details": "Returns the balance of a specific account.",
        "params": {
          "account": "Address of the account to query."
        }
      },
      "burn(uint256)": {
        "details": "Burns a specific amount of tokens.",
        "params": {
          "amount": "The amount of token to be burned."
        }
      },
      "burnFrom(address,uint256)": {
        "details": "Burns a specific amount of tokens from the specified address and decrements allowance.",
        "params": {
          "account": "The address to burn tokens from.",
          "amount": "The amount of token to be burned."
        }
      },
      "constructor": {
        "details": "Constructor that initializes the contract and mints the initial supply to the owner.",
        "params": {
          "initialOwner": "Address of the initial owner."
        }
      },
      "mint(address,uint256)": {
        "details": "Function to mint tokens.",
        "params": {
          "account": "The address that will receive the minted tokens.",
          "amount": "The amount of tokens to mint."
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "pause()": {
        "details": "Triggers stopped state."
      },
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise."
      },
      "totalSupply()": {
        "details": "Returns the total supply of tokens."
      },
      "transfer(address,uint256)": {
        "details": "Transfers tokens to a specified address.",
        "params": {
          "amount": "The amount to be transferred.",
          "recipient": "The address to transfer to."
        }
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfers tokens from one address to another.",
        "params": {
          "amount": "The amount of tokens to be transferred.",
          "recipient": "The address which you want to transfer to.",
          "sender": "The address which you want to send tokens from."
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`).",
        "params": {
          "newOwner": "The address of the new owner."
        }
      },
      "unpause()": {
        "details": "Returns to normal state."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "MAX_SUPPLY()": {
        "notice": "Maximum supply limit."
      },
      "decimals()": {
        "notice": "Number of decimals."
      },
      "name()": {
        "notice": "Token name."
      },
      "symbol()": {
        "notice": "Token symbol."
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 17,
        "contract": "contracts/chainewsToken.sol:ChainewsToken",
        "label": "name",
        "offset": 0,
        "slot": "0",
        "type": "t_string_storage"
      },
      {
        "astId": 21,
        "contract": "contracts/chainewsToken.sol:ChainewsToken",
        "label": "symbol",
        "offset": 0,
        "slot": "1",
        "type": "t_string_storage"
      },
      {
        "astId": 25,
        "contract": "contracts/chainewsToken.sol:ChainewsToken",
        "label": "decimals",
        "offset": 0,
        "slot": "2",
        "type": "t_uint8"
      },
      {
        "astId": 28,
        "contract": "contracts/chainewsToken.sol:ChainewsToken",
        "label": "_totalSupply",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 31,
        "contract": "contracts/chainewsToken.sol:ChainewsToken",
        "label": "_paused",
        "offset": 0,
        "slot": "4",
        "type": "t_bool"
      },
      {
        "astId": 52,
        "contract": "contracts/chainewsToken.sol:ChainewsToken",
        "label": "_balances",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 59,
        "contract": "contracts/chainewsToken.sol:ChainewsToken",
        "label": "_allowances",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
      },
      {
        "astId": 62,
        "contract": "contracts/chainewsToken.sol:ChainewsToken",
        "label": "_contractOwner",
        "offset": 0,
        "slot": "7",
        "type": "t_address"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_uint256)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  }
}